# Generated by Django 5.0.3 on 2024-03-26 12:49

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Название')),
                ('parent_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='children', to='training_course.category', verbose_name='Родительская категория')),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
            },
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('viewed_users', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='viewed_lessons', to='core.user', verbose_name='Просмотревшие пользователи')),
            ],
        ),
        migrations.CreateModel(
            name='LessonFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('file', models.FileField(upload_to='lesson_media', verbose_name='Файл')),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lessons', to='training_course.lesson', verbose_name='К уроку')),
            ],
            options={
                'verbose_name': 'Файл урока',
                'verbose_name_plural': 'Файлы урока',
            },
        ),
        migrations.CreateModel(
            name='TrainingCourse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('cost', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='Стоимость')),
                ('sale', models.PositiveSmallIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(100)], verbose_name='Скидка')),
                ('from_data', models.DateField(blank=True, help_text='С какого числа начинается курс', null=True, verbose_name='Начало курса')),
                ('to_data', models.DateField(blank=True, help_text='Какого числа заканчивается курс', null=True, verbose_name='Окончание курса')),
                ('time_is_fixed', models.BooleanField(default=False, verbose_name='Ограничено по времени')),
                ('admission_how_days', models.PositiveSmallIntegerField(null=True, verbose_name='На сколько дней доступ')),
                ('level', models.CharField(choices=[('any', 'Любой'), ('for_beginners', 'Для новичков'), ('for_specialists', 'Для специалистов')], default='for_beginners', max_length=255, verbose_name='Уровень сложности')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('number_of_clicks', models.PositiveIntegerField(default=0, verbose_name='Количество нажатий на курс')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='courses', to='training_course.category', verbose_name='Категория')),
                ('participant', models.ManyToManyField(blank=True, related_name='courses_participant', to='core.user', verbose_name='Участники')),
                ('responsible', models.ManyToManyField(blank=True, related_name='responsible_for_courses', to='core.user', verbose_name='Ответственные')),
            ],
            options={
                'verbose_name': 'Курс',
                'verbose_name_plural': 'Курсы',
            },
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dc', models.DateTimeField(auto_now_add=True, verbose_name='Дата приобретения')),
                ('is_blocked', models.BooleanField(default=False, verbose_name='Заблокирован')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активная')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscriptions', to='core.user', verbose_name='Пользователь')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscriptions', to='training_course.trainingcourse', verbose_name='Курс')),
            ],
            options={
                'verbose_name': 'Подписка',
                'verbose_name_plural': 'Подписки',
            },
        ),
        migrations.AddField(
            model_name='lesson',
            name='course',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lessons', to='training_course.trainingcourse', verbose_name='К курсу'),
        ),
    ]
